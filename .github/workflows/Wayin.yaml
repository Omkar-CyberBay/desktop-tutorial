name: Split Issue

on:
  issues:
    types: [closed]

jobs:
  split_issue:
    if: contains(github.event.issue.labels.*.name, 'approval') && github.event.issue.state_reason == 'completed'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Authenticate with GitHub CLI
        run: gh auth login --with-token <<< "${{ secrets.GH_TOKEN }}"

      - name: Duplicate the issue
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          REPO: ${{ github.repository }}
          ASSIGNEE: 'Omkar-Net-Mon' 
        run: |
          TITLE=$(gh issue view $ISSUE_NUMBER --repo $REPO --json title -q '.title')
          BODY=$(gh issue view $ISSUE_NUMBER --repo $REPO --json body -q '.body')
          # DUPLICATE_CHECK=$(gh issue list --repo $REPO --search "0. ${TITLE}" --json number -q '.[] | .number')

          # if [ -z "$DUPLICATE_CHECK" ]; then
            gh issue create --repo $REPO --title "2. $TITLE SPLIT" --body "$BODY" --assignee "$ASSIGNEE" --label "lisence"
            echo "Duplicate issue created."
          # else
          #  echo "Duplicate issue already exists. No action taken."
          # fi 

  close_original_issue:
    if: contains(github.event.issue.labels.*.name, 'approval') && github.event.issue.state_reason == 'not planned'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        
      - name: Authenticate with GitHub CLI
        run: echo "${{ secrets.GH_TOKEN }}" | gh auth login --with-token

      - name: Close issues
        env:
          ORIGINAL_ISSUE_NUMBER: ${{ github.event.issue.number }}
          REPO: ${{ github.repository }}

        run: |
          gh issue edit $ORIGINAL_ISSUE_NUMBER --repo $REPO --state closed
          echo "Original issue POC is closed due to status as not planned."



        
        
          
